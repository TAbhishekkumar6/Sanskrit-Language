/**
 * Documentation interfaces for Sanskrit libraries
 */

export interface पुस्तकालयदस्तावेज़ {
    नाम: string;
    संस्करण: string;
    लेखक: string;
    विवरण: string;
    उदाहरण: string[];
    श्रेणियाँ: दस्तावेज़श्रेणी[];
}

export interface दस्तावेज़श्रेणी {
    नाम: string;
    विवरण: string;
    कार्य: कार्यदस्तावेज़[];
}

export interface कार्यदस्तावेज़ {
    नाम: string;
    विवरण: string;
    मापदंड: मापदंडदस्तावेज़[];
    वापसी: {
        प्रकार: string;
        विवरण: string;
    };
    उदाहरण?: string[];
    नोट?: string[];
    जटिलता?: {
        समय: string;
        स्थान: string;
    };
}

export interface मापदंडदस्तावेज़ {
    नाम: string;
    प्रकार: string;
    विवरण: string;
    वैकल्पिक?: boolean;
    डिफ़ॉल्ट?: any;
}

/**
 * Documentation generator for libraries
 */
export class दस्तावेज़जनक {
    /**
     * Generate documentation for a library
     * @param पथ Path to library directory
     * @returns Generated documentation
     */
    static async जनन(पथ: string): Promise<पुस्तकालयदस्तावेज़> {
        // TODO: Implement documentation generation
        throw new Error('Not implemented');
    }

    /**
     * Generate markdown documentation
     * @param दस्तावेज़ Documentation object
     * @returns Markdown string
     */
    static मार्कडाउन(दस्तावेज़: पुस्तकालयदस्तावेज़): string {
        let मार्कडाउन = `# ${दस्तावेज़.नाम}\n\n`;
        
        मार्कडाउन += `## विवरण\n${दस्तावेज़.विवरण}\n\n`;
        
        मार्कडाउन += `## संस्करण\n${दस्तावेज़.संस्करण}\n\n`;
        
        मार्कडाउन += `## लेखक\n${दस्तावेज़.लेखक}\n\n`;

        if (दस्तावेज़.उदाहरण.length > 0) {
            मार्कडाउन += '## उदाहरण\n';
            दस्तावेज़.उदाहरण.forEach(उदाहरण => {
                मार्कडाउन += `\`\`\`typescript\n${उदाहरण}\n\`\`\`\n\n`;
            });
        }

        दस्तावेज़.श्रेणियाँ.forEach(श्रेणी => {
            मार्कडाउन += `## ${श्रेणी.नाम}\n\n`;
            मार्कडाउन += `${श्रेणी.विवरण}\n\n`;

            श्रेणी.कार्य.forEach(कार्य => {
                मार्कडाउन += `### ${कार्य.नाम}\n\n`;
                मार्कडाउन += `${कार्य.विवरण}\n\n`;

                मार्कडाउन += '#### मापदंड\n\n';
                if (कार्य.मापदंड.length > 0) {
                    मार्कडाउन += '| नाम | प्रकार | विवरण | वैकल्पिक | डिफ़ॉल्ट |\n';
                    मार्कडाउन += '|------|--------|---------|------------|----------|\n';
                    कार्य.मापदंड.forEach(मापदंड => {
                        मार्कडाउन += `| ${मापदंड.नाम} | ${मापदंड.प्रकार} | ${मापदंड.विवरण} | ${मापदंड.वैकल्पिक ? 'हाँ' : 'नहीं'} | ${मापदंड.डिफ़ॉल्ट || '-'} |\n`;
                    });
                    मार्कडाउन += '\n';
                } else {
                    मार्कडाउन += 'कोई मापदंड नहीं\n\n';
                }

                मार्कडाउन += `#### वापसी\n**प्रकार:** ${कार्य.वापसी.प्रकार}\n\n${कार्य.वापसी.विवरण}\n\n`;

                if (कार्य.उदाहरण) {
                    मार्कडाउन += '#### उदाहरण\n';
                    कार्य.उदाहरण.forEach(उदाहरण => {
                        मार्कडाउन += `\`\`\`typescript\n${उदाहरण}\n\`\`\`\n\n`;
                    });
                }

                if (कार्य.नोट) {
                    मार्कडाउन += '#### नोट\n';
                    कार्य.नोट.forEach(नोट => {
                        मार्कडाउन += `- ${नोट}\n`;
                    });
                    मार्कडाउन += '\n';
                }

                if (कार्य.जटिलता) {
                    मार्कडाउन += '#### जटिलता\n';
                    मार्कडाउन += `- समय जटिलता: ${कार्य.जटिलता.समय}\n`;
                    मार्कडाउन += `- स्थान जटिलता: ${कार्य.जटिलता.स्थान}\n\n`;
                }
            });
        });

        return मार्कडाउन;
    }
}