name: Release

on:
  push:
    branches: [ main, master, Preview, beta ]

# Add necessary permissions
permissions:
  contents: write # Permission to create releases
  packages: read

jobs:
  create-tag-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: package_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          BRANCH=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH" == "Preview" ]]; then
            TAG="v${VERSION}-preview.$(date +'%Y%m%d%H%M%S')"
          elif [[ "$BRANCH" == "beta" ]]; then
            TAG="v${VERSION}-beta.$(date +'%Y%m%d%H%M%S')"
          else
            TAG="v${VERSION}"
          fi
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ steps.package_version.outputs.TAG }}
          git push origin ${{ steps.package_version.outputs.TAG }}

      - name: Build project
        run: npm run build

      - name: Determine release type
        id: release_type
        run: |
          TAG=${{ steps.package_version.outputs.TAG }}
          if [[ "$TAG" == *-preview.* ]]; then
            echo "TYPE=preview" >> $GITHUB_OUTPUT
          elif [[ "$TAG" == *-beta.* ]]; then
            echo "TYPE=beta" >> $GITHUB_OUTPUT
          else
            echo "TYPE=stable" >> $GITHUB_OUTPUT
          fi

      - name: Create zip archive
        run: |
          RELEASE_TYPE=${{ steps.release_type.outputs.TYPE }}
          zip -r samskrit-language-$RELEASE_TYPE.zip dist LICENSE README.md package.json
          echo "Created archive for $RELEASE_TYPE release"
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.package_version.outputs.TAG }}
          name: Sanskrit Language ${{ steps.package_version.outputs.TAG }}
          files: |
            samskrit-language-${{ steps.release_type.outputs.TYPE }}.zip
          draft: false
          prerelease: ${{ steps.release_type.outputs.TYPE != 'stable' }}
          generate_release_notes: true
          body: |
            ## Sanskrit Language ${{ steps.package_version.outputs.TAG }}
            
            **Release Type**: ${{ steps.release_type.outputs.TYPE }}
            
            ### Installation
            Download the zip file and extract it to your preferred location. 
            
            ### Getting Started
            Refer to the documentation in the README.md file for details on how to use the Sanskrit Language.